name: CI/CD 

on:
  push:
    branches:
      - dev
      - stag
      - prod
  pull_request:
    branches:
      - '*'

jobs:

  Development:
      if: startsWith(github.ref, 'refs/heads/dev')
      runs-on: ubuntu-latest
      env:
          DATABRICKS_HOST: ${{ secrets.DB_HOST_DEV }}
          DATABRICKS_TOKEN:  ${{ secrets.DB_TOKEN_DEV }}
          AWS_ACCESS_KEY: ${{ secrets.C5I_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.C5I_SECRET_KEY }}

      steps:
        - name: Checkout Repository
          uses: actions/checkout@v2

        - name: Set up Python 3.9
          uses: actions/setup-python@v4
          with:
            python-version: '3.9'
            cache: 'pip' 
            cache-dependency-path: setup.py

        - name: Install pip
          run: |
            python -m pip install --upgrade pip

        - name: Install dependencies and project in dev mode
          run: |
            pip install -e ".[local,test]"
            pip install evidently

        - name: Scope Creation Check
          run: |
            python scope-creation.py

        - name: Workflow Data-preprocessing deployment (assets only upload)
          run: |
            dbx deploy Data-preprocessing --assets-only 

        - name: Run the Data-preprocessing workflow in a jobless fashion
          run: |
            dbx launch Data-preprocessing --from-assets --trace 

        - name: Workflow Model-Training deployment (assets only upload)
          run: |
            dbx deploy Model-Training --assets-only 

        - name: Run the Model-Training workflow in a jobless fashion
          run: |
            dbx launch Model-Training --from-assets --trace 

        - name: Workflow Model-Inferencing deployment (assets only upload)
          run: |
            dbx deploy Model-Inferencing --assets-only 

        - name: Run the Model-Inferencing workflow in a jobless fashion
          run: |
            dbx launch Model-Inferencing --from-assets --trace 



  Staging:
      if: always() && startsWith(github.ref, 'refs/heads/stag')
      runs-on: ubuntu-latest
      needs: Development
      env:
          DATABRICKS_HOST: ${{ secrets.DB_HOST_DEV }}
          DATABRICKS_TOKEN:  ${{ secrets.DB_TOKEN_DEV }}
          AWS_ACCESS_KEY: ${{ secrets.C5I_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.C5I_SECRET_KEY }}
      steps:
          - name: Checkout Repository
            uses: actions/checkout@v2
            
          - name: Acceptance
            run: |
              # Add your acceptance testing commands here
              echo "Acceptance testing..."
  
  Production:
      if: always() && startsWith(github.ref, 'refs/heads/prod')
      runs-on: ubuntu-latest
      needs: Staging
      env:
          DATABRICKS_HOST: ${{ secrets.DB_HOST_PROD }}
          DATABRICKS_TOKEN:  ${{ secrets.DB_TOKEN_PROD }}
          AWS_ACCESS_KEY: ${{ secrets.C5I_ACCESS_KEY }}
          AWS_SECRET_KEY: ${{ secrets.C5I_SECRET_KEY }}
      steps:
          - name: Checkout Repository
            uses: actions/checkout@v2
            
          - name: Production
            if: startsWith(github.ref, 'refs/heads/releases')
            run: |
              # Add your production deployment commands here
              echo "Deploying to Production..."
  

    